name: Auto-merge labeled PRs

on:
  pull_request:
    types: [labeled, synchronize, reopened]
  check_suite:
    types: [completed]
  workflow_run:
    workflows: ["Deploy helper app to GitHub Pages"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    if: ${{ github.event.pull_request && contains(github.event.pull_request.labels.*.name, 'automerge') }}
    runs-on: ubuntu-latest
    steps:
      - name: Ensure checks are green and merge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.info('No PR in payload (likely check_suite/workflow_run event). Exiting.');
              return;
            }
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get combined status + checks conclusion
            const { data: combined } = await github.repos.getCombinedStatusForRef({ owner, repo, ref: pr.head.sha });
            if (combined.state !== 'success') {
              core.info(`Combined status not green: ${combined.state}`);
              return;
            }

            // Also verify all check runs that report conclusions
            const { data: checks } = await github.checks.listForRef({ owner, repo, ref: pr.head.sha });
            const failing = checks.check_runs.find(r => ['failure','cancelled','timed_out','action_required','stopped'].includes((r.conclusion||'').toLowerCase()));
            if (failing) {
              core.info(`A check is not successful: ${failing.name} -> ${failing.conclusion}`);
              return;
            }

            // Merge PR
            await github.pulls.merge({ owner, repo, pull_number: pr.number, merge_method: 'squash' });
            core.info(`Merged PR #${pr.number}`);
