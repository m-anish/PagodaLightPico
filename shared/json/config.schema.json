{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/m-anish/PagodaLightPico/schemas/config.schema.json",
  "title": "PagodaLightPico Configuration",
  "type": "object",
  "additionalProperties": false,
  "required": ["wifi", "timezone", "hardware", "system", "pwm_pins"],
  "properties": {
    "version": { "type": "string" },
    "hostname": { "type": "string" },
    "wifi": {
      "type": "object",
      "additionalProperties": false,
      "required": ["ssid", "password"],
      "properties": {
        "ssid": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 }
      }
    },
    "timezone": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name", "offset"],
      "properties": {
        "name": { "type": "string", "minLength": 1 },
        "offset": { "type": "number", "minimum": -12, "maximum": 14 }
      }
    },
    "hardware": {
      "type": "object",
      "additionalProperties": false,
      "required": ["rtc_i2c_sda_pin", "rtc_i2c_scl_pin"],
      "properties": {
        "rtc_i2c_sda_pin": { "type": "integer", "minimum": 0, "maximum": 28 },
        "rtc_i2c_scl_pin": { "type": "integer", "minimum": 0, "maximum": 28 },
        "pwm_frequency": { "type": "integer", "minimum": 1, "maximum": 40000000 }
      }
    },
    "system": {
      "type": "object",
      "additionalProperties": false,
      "required": ["log_level", "update_interval"],
      "properties": {
        "log_level": { "type": "string", "enum": ["FATAL", "ERROR", "WARN", "INFO", "DEBUG"] },
        "update_interval": { "type": "integer", "minimum": 1 },
        "network_check_interval": { "type": "integer", "minimum": 10, "maximum": 3600 },
        "server_idle_sleep_ms": { "type": "integer", "minimum": 50, "maximum": 5000 },
        "client_read_sleep_ms": { "type": "integer", "minimum": 10, "maximum": 2000 },
        "ram_telemetry_enabled": { "type": "boolean" },
        "ram_telemetry_interval": { "type": "integer", "minimum": 10, "maximum": 86400 },
        "web_title": { "type": "string" }
      }
    },
    "notifications": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": { "type": "boolean" },
        "mqtt_broker": { "type": "string" },
        "mqtt_port": { "type": "integer" },
        "mqtt_topic": { "type": "string" },
        "mqtt_client_id": { "type": "string" },
        "notify_on_window_change": { "type": "boolean" },
        "notify_on_errors": { "type": "boolean" }
      }
    },
    "pwm_pins": {
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "patternProperties": {
        "^_": { "description": "Helper/comment keys ignored by firmware", "type": ["string", "number", "boolean", "object", "array", "null"] },
        "^[^_].*$": {
          "type": "object",
          "additionalProperties": false,
          "required": ["gpio_pin", "name"],
          "properties": {
            "gpio_pin": { "type": "integer", "minimum": 0, "maximum": 28 },
            "name": { "type": "string", "minLength": 1 },
            "enabled": { "type": "boolean" },
            "time_windows": {
              "type": "object",
              "minProperties": 2,
              "maxProperties": 5,
              "additionalProperties": false,
              "patternProperties": {
                "^_": { "description": "Helper/comment keys", "type": ["string", "number", "boolean", "object", "array", "null"] },
                "^[^_].*$": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["start", "end", "duty_cycle"],
                  "properties": {
                    "start": { "$ref": "#/$defs/timeString" },
                    "end": { "$ref": "#/$defs/timeString" },
                    "duty_cycle": { "type": "integer", "minimum": 0, "maximum": 100 }
                  }
                }
              },
              "allOf": [
                { "required": ["day"] }
              ]
            }
          },
          "allOf": [
            {
              "if": { "properties": { "enabled": { "const": true } }, "required": ["enabled"] },
              "then": { "required": ["time_windows"] }
            }
          ]
        }
      }
    }
  },
  "$defs": {
    "timeString": {
      "description": "Either 'sunrise'/'sunset' or HH:MM 24-hour format",
      "oneOf": [
        { "type": "string", "enum": ["sunrise", "sunset"] },
        { "type": "string", "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$" }
      ]
    }
  },
  "description": "Note: Some constraints (unique GPIOs, 1-5 enabled pins, avoiding I2C pin conflicts) are enforced by firmware at runtime and may not be fully expressible in JSON Schema."
}
